{"index.html":"<html><head><script src=\"https://cdn.syncfusion.com/ej2/22.1.34/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/22.1.34/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"control-section\">\n    <div class=\"sample-container\">\n        <div class=\"default-section\">\n            <div id=\"defaultRTE\">\n                <p>\n                  An image can be edited within a Rich Text Editor using an Image Editor.\n                  <img id=\"img1\" style=\"height: 350px;\" src=\"https://ej2.syncfusion.com/demos/src/image-editor/images/bridge.png\">\n                </p>\n                <p>\n                  It allows users to quickly and easily add an Image Editor to their Rich Text Editor.\n                  It provides a variety of features, including image cropping, resizing, rotation, and more.\n                  Additionally, it supports a wide range of image formats, including JPEG, PNG, and GIF.\n                </p>\n              </div>\n            <div id=\"defaultDialog\">\n                <div id=\"imageeditor\">\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n\n\n</div></body></html>","index.js":"{{ripple}}/**\n * Rich Text Editor Image Editor integration sample\n */\n \n \n   \n    var selection = new ej.richtexteditor.NodeSelection();\n    var header = 'Image Editor';\n    var range;\n    var saveSelection;\n    var dataURL;\n    var isLoaded = false;\n    var imageEditorObj;\n    var dlgButtons = [\n        {\n          buttonModel: { content: 'Insert', isPrimary: true },\n          click: onInsert.bind(this),\n        },\n        { buttonModel: { content: 'Cancel' }, click: onCancel },\n      ];\n     var defaultRTE = new ej.richtexteditor.RichTextEditor({\n        quickToolbarSettings: {\n            image: [\n              'Replace',\n              'Align',\n              'Caption',\n              'Remove',\n              '-',\n              'InsertLink',\n              'Display',\n              'AltText',\n              {\n                tooltipText: 'Image Editor',\n                template:\n                  '<button class=\"e-tbar-btn e-btn\" id=\"imageEditor\"><span class=\"e-btn-icon e-icons e-rte-image-editor\"></span>',\n              },\n            ],\n          },\n        \n          toolbarClick: onToolbarClick,\n      });\n     defaultRTE.appendTo('#defaultRTE');\n \n     var dialogObj = new ej.popups.Dialog({\n        buttons: dlgButtons,\n        open: OnOpen,\n        header: header,\n        visible: false,\n        showCloseIcon: true,\n        width: '800px',\n        height: '800px',\n        isModal: true,\n      });\n      dialogObj.appendTo('#defaultDialog');\n      \n    function onToolbarClick(args){\n        if (args.item.tooltipText === 'Image Editor') {\n            range = selection.getRange(document);\n            saveSelection = selection.save(range, document);\n            dialogObj.show();\n          }\n    }\n    function onInsert() {\n        if (defaultRTE.formatter.getUndoRedoStack().length === 0) {\n          defaultRTE.formatter.saveData();\n        }\n        saveSelection.restore();\n        var canvas = document.createElement('CANVAS');\n        var ctx = canvas.getContext('2d');\n        var imgData = imageEditorObj.getImageData();\n        canvas.height = imgData.height;\n        canvas.width = imgData.width;\n        ctx.putImageData(imgData, 0, 0);\n        isLoaded = true;\n        defaultRTE.executeCommand('editImage', {\n          url: canvas.toDataURL(),\n          width: { width: canvas.width },\n          height: { height: canvas.height },\n          selection: saveSelection,\n        });\n        defaultRTE.formatter.saveData();\n        defaultRTE.formatter.enableUndo(defaultRTE);\n        dialogObj.hide();\n        isLoaded = false;\n      }\n      \n      function onCancel() {\n        dialogObj.hide();\n      }\n      function OnOpen() {\n        imageEditorObj = new ej.imageeditor.ImageEditor({\n          height: '450px',\n        });\n        imageEditorObj.appendTo('#imageeditor');\n        var imageELement;\n        var selectNodes =\n          defaultRTE.formatter.editorManager.nodeSelection.getNodeCollection(range);\n        if (selectNodes.length == 1 && selectNodes[0].tagName == 'IMG') {\n          imageELement = selectNodes[0];\n          imageELement.crossOrigin = 'anonymous';\n          var canvas = document.createElement('CANVAS');\n          var ctx = canvas.getContext('2d');\n          canvas.height = imageELement.offsetHeight;\n          canvas.width = imageELement.offsetWidth;\n          imageELement.onload = function () {\n            ctx.drawImage(imageELement, 0, 0, canvas.width, canvas.height);\n            dataURL = canvas.toDataURL();\n            if (!isLoaded) {\n              imageEditorObj.open(dataURL);\n            }\n          };\n        }\n      }     \n \n"}