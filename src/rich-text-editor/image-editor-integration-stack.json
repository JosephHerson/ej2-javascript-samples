{"index.html":"<html><head><script src=\"https://cdn.syncfusion.com/ej2/22.1.34/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/22.1.34/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"control-section\">\n    <div class=\"sample-container\">\n        <div class=\"default-section\">\n            <div id=\"defaultRTE\">\n                <p>\n                  An image can be edited within a Rich Text Editor using an Image Editor.\n                  <img id=\"img1\" style=\"height: 350px;\" src=\"https://ej2.syncfusion.com/demos/src/image-editor/images/bridge.png\">\n                </p>\n                <p>\n                  It allows users to quickly and easily add an Image Editor to their Rich Text Editor.\n                  It provides a variety of features, including image cropping, resizing, rotation, and more.\n                  Additionally, it supports a wide range of image formats, including JPEG, PNG, and GIF.\n                </p>\n              </div>\n            <div id=\"defaultDialog\">\n                <div id=\"imageeditor\">\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n\n\n</div></body></html>","index.js":"{{ripple}}/**\r\n * Rich Text Editor Image Editor integration sample\r\n */\r\n \r\n \r\n   \r\n    var selection = new ej.richtexteditor.NodeSelection();\r\n    var header = 'Image Editor';\r\n    var range;\r\n    var saveSelection;\r\n    var dataURL;\r\n    var isLoaded = false;\r\n    var imageELement;\r\n    var imageEditorObj;\r\n    var dlgButtons = [\r\n        {\r\n          buttonModel: { content: 'Save', isPrimary: true },\r\n          click: onInsert.bind(this),\r\n        },\r\n        { buttonModel: { content: 'Cancel' }, click: onCancel },\r\n      ];\r\n     var defaultRTE = new ej.richtexteditor.RichTextEditor({\r\n        quickToolbarSettings: {\r\n            image: [\r\n              'Replace',\r\n              'Align',\r\n              'Caption',\r\n              'Remove',\r\n              '-',\r\n              'InsertLink',\r\n              'Display',\r\n              'AltText',\r\n              {\r\n                tooltipText: 'Image Editor',\r\n                template:\r\n                  '<button class=\"e-tbar-btn e-btn\" id=\"imageEditor\"><span class=\"e-btn-icon e-icons e-rte-image-editor\"></span>',\r\n              },\r\n            ],\r\n          },\r\n        \r\n          toolbarClick: onToolbarClick,\r\n          destroyed: destroyed\r\n      });\r\n     defaultRTE.appendTo('#defaultRTE');\r\n \r\n     var dialogObj = new ej.popups.Dialog({\r\n        buttons: dlgButtons,\r\n        open: OnOpen,\r\n        header: header,\r\n        visible: false,\r\n        showCloseIcon: true,\r\n        width: '800px',\r\n        height: '550px',\r\n        isModal: true,\r\n      });\r\n      dialogObj.appendTo('#defaultDialog');\r\n      \r\n    function destroyed() {\r\n        dialogObj.destroy();\r\n      }\r\n\r\n    function onToolbarClick(args){\r\n        if (args.item.tooltipText === 'Image Editor') {\r\n            range = selection.getRange(document);\r\n            saveSelection = selection.save(range, document);\r\n            dialogObj.show();\r\n          }\r\n    }\r\n    function onInsert() {\r\n        if (defaultRTE.formatter.getUndoRedoStack().length === 0) {\r\n          defaultRTE.formatter.saveData();\r\n        }\r\n        saveSelection.restore();\r\n        var canvas = document.createElement('CANVAS');\r\n        var ctx = canvas.getContext('2d');\r\n        var imgData = imageEditorObj.getImageData();\r\n        canvas.height = imgData.height;\r\n        canvas.width = imgData.width;\r\n        ctx.putImageData(imgData, 0, 0);\r\n        isLoaded = true;\r\n        defaultRTE.executeCommand('editImage', {\r\n          url: canvas.toDataURL(),\r\n          width: { width: canvas.width },\r\n          height: { height: canvas.height },\r\n          selection: saveSelection,\r\n          cssClass: imageELement.getAttribute('class').replace('e-rte-image', ''),\r\n        });\r\n        defaultRTE.formatter.saveData();\r\n        defaultRTE.formatter.enableUndo(defaultRTE);\r\n        dialogObj.hide();\r\n        isLoaded = false;\r\n      }\r\n      \r\n      function onCancel() {\r\n        imageEditorObj.destroy();\r\n        imageEditorObj = null;\r\n        dialogObj.hide();\r\n      }\r\n      function OnOpen() {\r\n        if(imageEditorObj == null){\r\n          imageEditorObj = new ej.imageeditor.ImageEditor({\r\n            height: '400px',\r\n            toolbar: ['Undo', 'Redo', 'Crop', 'Annotate', 'ZoomIn', 'ZoomOut',\r\n            'Reset', 'Pan', 'Finetune', 'Filter', 'Pen', 'Line', 'Rectangle', 'Ellipse', 'Arrow',\r\n            'Path', 'Text', 'CustomSelection', 'CircleSelection', 'SquareSelection', 'RatioSelection',\r\n            'Default', 'Chrome', 'Cold', 'Warm', 'Grayscale', 'Sepia', 'Invert', 'Brightness', 'Contrast',\r\n            'Hue', 'Saturation', 'Exposure', 'Opacity', 'Blur' ]\r\n          });\r\n          imageEditorObj.appendTo('#imageeditor');\r\n        }\r\n        var selectNodes =\r\n          defaultRTE.formatter.editorManager.nodeSelection.getNodeCollection(range);\r\n        if (selectNodes.length == 1 && selectNodes[0].tagName == 'IMG') {\r\n          imageELement = selectNodes[0];\r\n          imageELement.crossOrigin = 'anonymous';\r\n          var canvas = document.createElement('CANVAS');\r\n          var ctx = canvas.getContext('2d');\r\n          canvas.height = imageELement.offsetHeight;\r\n          canvas.width = imageELement.offsetWidth;\r\n          imageELement.onload = function () {\r\n            ctx.drawImage(imageELement, 0, 0, canvas.width, canvas.height);\r\n            dataURL = canvas.toDataURL();\r\n            if (!isLoaded) {\r\n              imageEditorObj.open(dataURL);\r\n            }\r\n          };\r\n          if (imageELement.complete) {\r\n            imageELement.onload();\r\n          }\r\n        }\r\n      }     \r\n \r\n"}