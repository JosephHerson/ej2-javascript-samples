{"index.html":"<html><head><script src=\"https://cdn.syncfusion.com/ej2/24.1.41/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/24.1.41/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"control-section e-rte-emoticon-tbar-section\">\n    <div class=\"sample-container\">\n        <div class=\"default-section\" id=\"mentionFormatIntegration\">\n            <div id=\"mentionEditor\"></div>\n            <div id=\"MentionInlineFormat\"></div>\n        </div>\n    </div>\n</div>\n\n\n\n\n</div></body></html>","index.js":"{{ripple}}/**\n * Rich Text Editor mention integration sample\n */\n \n \n \n    window.formatList = [\n        { formatName: \"Text\", command: \"P\", formatType: \"Basic blocks\", icon: \"e-btn-icon e-text e-icons\", description: \"Writing with paragraphs\"},\n        { formatName: \"Quotation\", command: \"BlockQuote\", formatType: \"Basic blocks\", icon: \"e-icons block-view\", description: \"Insert a quote or citation\" },\n        { formatName: \"Heading 1\", command: \"H1\", formatType: \"Basic blocks\", icon: \"e-icons h1-view\", description: \"Use this for a top level heading\"},\n        { formatName: \"Heading 2\", command: \"H2\", formatType: \"Basic blocks\", icon: \"e-icons h2-view\", description: \"Use this for key sections\"},\n        { formatName: \"Heading 3\", command: \"H3\", formatType: \"Basic blocks\", icon: \"e-icons h3-view\",description: \"Use this for sub sections and group headings\" },\n        { formatName: \"Heading 4\", command: \"H4\", formatType: \"Basic blocks\", icon: \"e-icons h4-view\", description: \"Use this for deep headings\"},\n        { formatName: \"Numbered list\", command: \"OL\", formatType: \"Basic blocks\", icon: \"e-icons e-list-ordered icon\", description: \"Create an ordered list\"},\n        { formatName: \"Bulleted list\", command: \"UL\", formatType: \"Basic blocks\", icon: \"e-icons e-list-unordered icon\", description: \"Create an unordered list\"},\n        { formatName: \"Table\", command: \"CreateTable\", formatType: \"Basic blocks\",icon: \"e-icons e-table icon\", description: \"Insert a table\"},\n        { formatName: \"Emoji picker\", command: \"EmojiPicker\", formatType: \"Inline\", icon: \"e-icons e-emoji icon\",description: \"Use emojis to express ideas and emoticons\"},\n        { formatName: \"Image\", command: \"Image\", formatType: \"Media\", icon: \"e-icons e-image icon\", description: \"Add image to your page\"},\n        { formatName: \"Audio\", command: \"Audio\", formatType: \"Media\", icon: \"e-icons e-audio icon\", description: \"Add audio to your page\"},\n        { formatName: \"Video\", command: \"Video\", formatType: \"Media\", icon: \"e-icons e-video icon\", description: \"Add video to your page\"},\n\n    ];\n\n    var selection = new ej.richtexteditor.NodeSelection();\n    var saveSelection;\n    var mentionObj;\n\n    var formatRTE = new ej.richtexteditor.RichTextEditor({\n        toolbarSettings: {\n            items: ['Bold', 'Italic', 'Underline', 'StrikeThrough', 'SuperScript', 'SubScript', '|',\n                'FontName', 'FontSize', 'FontColor', 'BackgroundColor', '|',\n                'LowerCase', 'UpperCase', '|',\n                'Formats', 'Alignments', '|', 'NumberFormatList', 'BulletFormatList', '|',\n                'Outdent', 'Indent', '|', 'CreateLink', 'Image', 'Video', 'Audio', 'CreateTable', '|', 'FormatPainter', 'ClearFormat',\n                '|', 'EmojiPicker', '|',\n                'SourceCode', 'FullScreen', '|', 'Undo', 'Redo']\n        },\n         placeholder: 'Type \"/\" and choose format',\n         actionBegin: function (args) {\n            if (args.requestType === 'EnterAction') {\n                if (mentionObj.element.classList.contains(\"e-popup-open\")) {\n                    args.cancel = true;\n                }\n            }  \n         }\n         \n    });\n    formatRTE.appendTo('#MentionInlineFormat');\n\n    function beforeApplyFormat() {\n        var currentRange = formatRTE.getRange();\n        var node = formatRTE.formatter.editorManager.nodeSelection.getNodeCollection(currentRange)[0];\n    \n        var startPoint = currentRange.startOffset;\n        while (formatRTE.formatter.editorManager.nodeSelection.getRange(document).toString().indexOf('/') == -1) {\n            formatRTE.formatter.editorManager.nodeSelection.setSelectionText(document, node, node, startPoint, currentRange.endOffset);\n            startPoint--;\n        }\n        var slashRange = formatRTE.getRange();\n        var slashNode = formatRTE.formatter.editorManager.nodeCutter.GetSpliceNode(slashRange, node);\n        var previouNode = slashNode.previousSibling;\n        if (slashNode.parentElement && slashNode.parentElement.innerHTML.length === 1) {\n            slashNode.parentElement.appendChild(document.createElement('br'));\n        }\n        slashNode.parentNode.removeChild(slashNode);\n        if (previouNode) {\n            selection.setCursorPoint(document, previouNode, previouNode.textContent.length);\n        }\n    }   \n\n    // Initialize Mention control.\n    \n    mentionObj = new ej.dropdowns.Mention({\n        popupHeight: '290px',\n        popupWidth: '320px',\n        dataSource: formatList,\n        mentionChar : '/',\n        itemTemplate: '<table class=\"format-table\"><tr><td><span id=\"icons\" class=\"${icon}\"></td><td><span class=\"font\">${formatName}</span><span class=\"description\">${description}</span></td></tr></table>',\n        fields: { text: 'formatName', groupBy: 'formatType' },\n        target: formatRTE.inputElement,\n        allowSpaces: true,\n        beforeOpen: function () {\n            saveSelection = selection.save(selection.getRange(document), document);\n        },\n        filtering: function () {\n            saveSelection = selection.save(selection.getRange(document), document);\n        },\n        select: applyCommand\n    });\n    mentionObj.appendTo('#mentionEditor');\n    \n    function applyCommand(args) {\n        args.cancel = true;\n        formatRTE.focusIn();\n        saveSelection.restore();\n        if (args.itemData.formatType !== 'Inline') {\n            beforeApplyFormat();\n        }\n        \n        switch (args.itemData.command) {\n            case 'OL':\n                formatRTE.executeCommand('insertOrderedList');\n                break;\n            case 'UL':\n                formatRTE.executeCommand('insertUnorderedList');\n                break;\n            case 'CreateTable':\n            case 'Image':\n            case 'Audio':\n            case 'Video':\n                mentionObj.hidePopup();\n                formatRTE.showDialog(args.itemData.command === 'Video'? 'InsertVideo': args.itemData.command === 'Audio'? 'InsertAudio': args.itemData.command === 'Image'? 'InsertImage': 'InsertTable');\n                break;\n            case 'EmojiPicker':\n                beforeApplyFormat();\n                mentionObj.hidePopup();\n                formatRTE.showEmojiPicker();\n                break;\n            default:\n                formatRTE.executeCommand('formatBlock', args.itemData.command);\n                break;\n        }\n    } \n \n"}