{"index.html":"<html><head><script src=\"https://cdn.syncfusion.com/ej2/22.1.34/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/22.1.34/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"control-section e-rte-emoticon-tbar-section\">\n    <div class=\"sample-container\">\n        <div class=\"default-section\" id=\"mentionFormatIntegration\">\n            <div id=\"mentionEditor\"></div>\n            <div id=\"MentionInlineFormat\"></div>\n            <div id=\"emojiDialog\" style=\"display: none\">\n                <div id=\"rteEmoticons-smiley\">\n                    <div class=\"char_block\" title=\"GRINNING FACE\">😀</div>\n                    <div class=\"char_block\" title=\"GRINNING FACE WITH SMILING EYES\">😁</div>\n                    <div class=\"char_block\" title=\"FACE WITH TEARS OF JOY\">😂</div>\n                    <div class=\"char_block\" title=\"SMILING FACE WITH OPEN MOUTH\">😃</div>\n                    <div class=\"char_block\" title=\"SMILING FACE WITH OPEN MOUTH AND SMILING EYES\">😄</div>\n                    <div class=\"char_block\" title=\"SMILING FACE WITH OPEN MOUTH AND COLD SWEAT\">😅</div>\n                    <div class=\"char_block\" title=\"SMILING FACE WITH OPEN MOUTH AND TIGHTLY-CLOSED EYES\">😆</div>\n                    <div class=\"char_block\" title=\"SMILING FACE WITH HALO\">😇</div>\n                    <div class=\"char_block\" title=\"SMILING FACE WITH HORNS\">😈</div>\n                    <div class=\"char_block\" title=\"WINKING FACE\">😉</div>\n                    <div class=\"char_block\" title=\"SMILING FACE WITH SMILING EYES\">😊</div>\n                    <div class=\"char_block\" title=\"FACE SAVOURING DELICIOUS FOOD\">😋</div>\n                    <div class=\"char_block\" title=\"RELIEVED FACE\">😌</div>\n                    <div class=\"char_block\" title=\"SMILING FACE WITH HEART-SHAPED EYES\">😍</div>\n                    <div class=\"char_block\" title=\"SMILING FACE WITH SUNGLASSES\">😎</div>\n                    <div class=\"char_block\" title=\"SMIRKING FACE\">😏</div>\n                    <div class=\"char_block\" title=\"NEUTRAL FACE\">😐</div>\n                    <div class=\"char_block\" title=\"EXPRESSIONLESS FACE\">😑</div>\n                    <div class=\"char_block\" title=\"UNAMUSED FACE\">😒</div>\n                    <div class=\"char_block\" title=\"FACE WITH COLD SWEAT\">😓</div>\n                    <div class=\"char_block\" title=\"PENSIVE FACE\">😔</div>\n                    <div class=\"char_block\" title=\"CONFUSED FACE\">😕</div>\n                    <div class=\"char_block\" title=\"CONFOUNDED FACE\">😖</div>\n                    <div class=\"char_block\" title=\"KISSING FACE\">😗</div>\n                    <div class=\"char_block\" title=\"FACE THROWING A KISS\">😘</div>\n                    <div class=\"char_block\" title=\"KISSING FACE WITH SMILING EYES\">😙</div>\n                    <div class=\"char_block\" title=\"KISSING FACE WITH CLOSED EYES\">😚</div>\n                    <div class=\"char_block\" title=\"FACE WITH STUCK-OUT TONGUE\">😛</div>\n                    <div class=\"char_block\" title=\"FACE WITH STUCK-OUT TONGUE AND WINKING EYE\">😜</div>\n                    <div class=\"char_block\" title=\"FACE WITH STUCK-OUT TONGUE AND TIGHTLY-CLOSED EYES\">😝</div>\n                    <div class=\"char_block\" title=\"Monkey Face\">🐵</div>\n                    <div class=\"char_block\" title=\"Monkey\">🐒</div>\n                    <div class=\"char_block\" title=\"Gorilla\">🦍</div>\n                    <div class=\"char_block\" title=\"Dog Face\">🐶</div>\n                    <div class=\"char_block\" title=\"Dog\">🐕</div>\n                    <div class=\"char_block\" title=\"Poodle\">🐩</div>\n                    <div class=\"char_block\" title=\"Wolf Face\">🐺</div>\n                    <div class=\"char_block\" title=\"Fox Face\">🦊</div>\n                    <div class=\"char_block\" title=\"Raccoon\">🦝</div>\n                    <div class=\"char_block\" title=\"Cat Face\">🐱</div>\n                    <div class=\"char_block\" title=\"Cat\">🐈</div>\n                    <div class=\"char_block\" title=\"Lion Face\">🦁</div>\n                    <div class=\"char_block\" title=\"Tiger Face\">🐯</div>\n                    <div class=\"char_block\" title=\"Tiger\">🐅</div>\n                    <div class=\"char_block\" title=\"Leopard\">🐆</div>\n                    <div class=\"char_block\" title=\"Horse Face\">🐴</div>\n                    <div class=\"char_block\" title=\"Horse\">🐎</div>\n                    <div class=\"char_block\" title=\"Unicorn Face\">🦄</div>\n                    <div class=\"char_block\" title=\"Zebra\">🦓</div>\n                    <div class=\"char_block\" title=\"Deer\">🦌</div>\n                    <div class=\"char_block\" title=\"Cow Face\">🐮</div>\n                    <div class=\"char_block\" title=\"Ox\">🐂</div>\n                    <div class=\"char_block\" title=\"Water Buffalo\">🐃</div>\n                    <div class=\"char_block\" title=\"Cow\">🐄</div>\n                    <div class=\"char_block\" title=\"Pig Face\">🐷</div>\n                    <div class=\"char_block\" title=\"Pig\">🐖</div>\n                    <div class=\"char_block\" title=\"Boar\">🐗</div>\n                    <div class=\"char_block\" title=\"Pig Nose\">🐽</div>\n                    <div class=\"char_block\" title=\"Ram\">🐏</div>\n                    <div class=\"char_block\" title=\"Ewe\">🐑</div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n\n\n</div></body></html>","index.js":"{{ripple}}/**\n * Rich Text Editor mention integration sample\n */\n \n \n \n    window.formatList = [\n        { formatName: \"Text\", command: \"P\", formatType: \"Basic blocks\", icon: \"e-btn-icon e-text e-icons\", description: \"Writing with paragraphs\"},\n        { formatName: \"Quotation\", command: \"BlockQuote\", formatType: \"Basic blocks\", icon: \"e-icons block-view\", description: \"Insert a quote or citation\" },\n        { formatName: \"Heading 1\", command: \"H1\", formatType: \"Basic blocks\", icon: \"e-icons h1-view\", description: \"Use this for a top level heading\"},\n        { formatName: \"Heading 2\", command: \"H2\", formatType: \"Basic blocks\", icon: \"e-icons h2-view\", description: \"Use this for key sections\"},\n        { formatName: \"Heading 3\", command: \"H3\", formatType: \"Basic blocks\", icon: \"e-icons h3-view\",description: \"Use this for sub sections and group headings\" },\n        { formatName: \"Heading 4\", command: \"H4\", formatType: \"Basic blocks\", icon: \"e-icons h4-view\", description: \"Use this for deep headings\"},\n        { formatName: \"Numbered list\", command: \"OL\", formatType: \"Basic blocks\", icon: \"e-icons e-list-ordered icon\", description: \"Create an ordered list\"},\n        { formatName: \"Bulleted list\", command: \"UL\", formatType: \"Basic blocks\", icon: \"e-icons e-list-unordered icon\", description: \"Create an unordered list\"},\n        { formatName: \"Table\", command: \"CreateTable\", formatType: \"Basic blocks\",icon: \"e-icons e-table icon\", description: \"Insert a table\"},\n        { formatName: \"Emoji\", command: \"Emoji\", formatType: \"Inline\", icon: \"e-icons emoji\",description: \"Use emojis to express ideads and emoticons\"},\n        { formatName: \"Image\", command: \"Image\", formatType: \"Media\", icon: \"e-icons e-image icon\", description: \"Add image to your page\"},\n        { formatName: \"Audio\", command: \"Audio\", formatType: \"Media\", icon: \"e-icons e-audio icon\", description: \"Add audio to your page\"},\n        { formatName: \"Video\", command: \"Video\", formatType: \"Media\", icon: \"e-icons e-video icon\", description: \"Add video to your page\"},\n\n    ];\n\n    var selection = new ej.richtexteditor.NodeSelection();\n    var saveSelection;\n    var mentionObj;\n\n    var formatRTE = new ej.richtexteditor.RichTextEditor({\n        toolbarSettings: {\n            items: ['Bold', 'Italic', 'Underline', 'StrikeThrough',\n                'FontName', 'FontSize', 'FontColor', 'BackgroundColor',\n                'LowerCase', 'UpperCase', 'SuperScript', 'SubScript', '|',\n                'Formats', 'Alignments', 'NumberFormatList', 'BulletFormatList',\n                'Outdent', 'Indent', '|',\n                'CreateTable', 'CreateLink', 'Image', '|', \n                'SourceCode', 'FullScreen', '|', 'Undo', 'Redo']\n        },\n         placeholder: 'Type \"/\" and choose format',\n         actionBegin: function (args) {\n            if (args.requestType === 'EnterAction') {\n                if (mentionObj.element.classList.contains(\"e-popup-open\")) {\n                    args.cancel = true;\n                }\n            }  \n         }\n         \n    });\n    formatRTE.appendTo('#MentionInlineFormat');\n\n    // begins the process of inserting emoticons.\n\n    var dialogContent =  '<div id=\"emojiIcon\"></div>';\n    var dialog = new ej.popups.Dialog({\n        header: 'Custom Emoticons',\n        content: dialogContent,\n        target: document.getElementById('mentionFormatIntegration'),\n        isModal: true,\n        width: '51%',\n        visible: false,\n        overlayClick: dialogOverlay,\n        buttons: [\n            { buttonModel: { content: \"Insert\", isPrimary: true }, click: onInsert },\n            { buttonModel: { content: 'Cancel' }, click: dialogOverlay }\n        ],\n        created: onDialogCreate,\n        open : onOpen\n    });\n    dialog.appendTo('#emojiDialog');\n    \n    function dialogOverlay() {\n        var activeElement = dialog.element.querySelector('.char_block.e-active');\n        if (activeElement) {\n            activeElement.classList.remove('e-active');\n        }\n        dialog.hide();\n    }\n\n    function beforeApplyFormat(isBlockFormat) {\n        var range1 = formatRTE.getRange();\n        var node = formatRTE.formatter.editorManager.nodeSelection.getNodeCollection(range1)[0];\n        var blockNewLine= !(node.parentElement.innerHTML.replace(/&nbsp;|<br>/g, '').trim() == '/' || node.textContent.trim().indexOf('/')==0);\n        var blockNode = void 0;\n        var startNode =node;\n        if (blockNewLine && isBlockFormat) {\n            while (startNode != formatRTE.inputElement) {\n                blockNode = startNode;\n                startNode = startNode.parentElement;\n            }\n        }            \n        var startPoint = range1.startOffset;\n        while(formatRTE.formatter.editorManager.nodeSelection.getRange(document).toString().indexOf(\"/\") ==-1 ){\n            formatRTE.formatter.editorManager.nodeSelection.setSelectionText(document, node, node, startPoint, range1.endOffset);\n            startPoint--;\n        }\n        var range2 = formatRTE.getRange();\n        var node2 = formatRTE.formatter.editorManager.nodeCutter.GetSpliceNode(range2, node);\n        var previouNode = node2.previousSibling;\n        node2.parentNode.removeChild(node2);\n        if(blockNewLine && isBlockFormat){\n            var defaultTag = document.createElement('p');\n            defaultTag.innerHTML = '</br>';\n            blockNode.parentNode.insertBefore(defaultTag, blockNode.nextSibling);\n           selection.setCursorPoint(document, blockNode.nextSibling, 0);\n        } else if(previouNode) {\n            selection.setCursorPoint(document, previouNode, previouNode.textContent.length);\n        }\n    }\n\n    function onInsert() {\n        var activeElement = dialog.element.querySelector('.char_block.e-active');\n        if (activeElement) {\n            if (formatRTE.formatter.getUndoRedoStack().length === 0) {\n                formatRTE.formatter.saveData();\n            }\n            beforeApplyFormat(false);\n            var range =formatRTE.getRange();\n            selection.setCursorPoint(document, range.startContainer, range.startOffset);\n            formatRTE.executeCommand('insertText', activeElement.textContent);\n            formatRTE.formatter.saveData();\n            formatRTE.formatter.enableUndo(formatRTE);\n        }\n        dialogOverlay();\n    }\n\n    function onDialogCreate() {\n        var dialogContent = document.getElementById('emojiDialog');\n        dialogContent.onclick = function (e) {\n            var target = e.target;\n            var activeElement = dialog.element.querySelector('.char_block.e-active');\n            if (target.classList.contains('char_block')) {\n                target.classList.add('e-active');\n                if (activeElement) {\n                    activeElement.classList.remove('e-active');\n                }\n            }\n        };\n    }\n\n    function onOpen() {\n        var emojiElement= document.getElementById(\"rteEmoticons-smiley\");\n        if(!emojiElement.children[0].classList.contains('e-active')){\n            emojiElement.children[0].classList.add('e-active');\n        }  \n    }\n\n    // End the process of inserting the emoticons.\n\n\n    // Initialize Mention control.\n    \n    mentionObj = new ej.dropdowns.Mention({\n        popupHeight: '290px',\n        popupWidth: '320px',\n        dataSource: formatList,\n        mentionChar : '/',\n        itemTemplate: '<table class=\"format-table\"><tr><td><span id=\"icons\" class=\"${icon}\"></td><td><span class=\"font\">${formatName}</span><span class=\"description\">${description}</span></td></tr></table>',\n        fields: { text: 'formatName', groupBy: 'formatType' },\n        target: formatRTE.inputElement,\n        allowSpaces: true,\n        beforeOpen: function () {\n            saveSelection = selection.save(selection.getRange(document), document);\n        },\n        filtering: function () {\n            saveSelection = selection.save(selection.getRange(document), document);\n        },\n        select: applyCommand\n    });\n    mentionObj.appendTo('#mentionEditor');\n    \n    function applyCommand(args) {\n        args.cancel = true;\n        formatRTE.focusIn();\n        saveSelection.restore();\n        if (args.itemData.formatType !== 'Inline') {\n            beforeApplyFormat(true);\n        }\n        if (args.itemData.command == 'OL'){\n            formatRTE.executeCommand('insertOrderedList');\n        }\n        else if (args.itemData.command == 'UL') {\n            formatRTE.executeCommand('insertUnorderedList');\n        } \n        else if (args.itemData.command == 'CreateTable') {\n            mentionObj.hidePopup();\n            formatRTE.showDialog('InsertTable');\n        } \n        else if (args.itemData.command == 'Image') {\n            mentionObj.hidePopup();\n            formatRTE.showDialog('InsertImage');\n        } \n        else if (args.itemData.command == 'Audio') {\n            mentionObj.hidePopup();\n            formatRTE.showDialog('InsertAudio');\n        } \n        else if (args.itemData.command == 'Video') {\n            mentionObj.hidePopup();\n            formatRTE.showDialog('InsertVideo');\n        } \n        else if (args.itemData.command == 'Emoji') {\n            dialog.element.style.display = 'block';\n            mentionObj.hidePopup();\n            dialog.show();\n        }\n        else {\n            formatRTE.executeCommand('formatBlock', args.itemData.command);\n        }\n    } \n \n"}