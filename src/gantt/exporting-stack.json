{"index.html":"<html><head><script src=\"//ej2.syncfusion.com/javascript/demos/gantt/exporting/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/22.1.34/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/22.1.34/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n            .control-section{\n                margin-top:100px;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"control-section\">\n    <div class=\"content-wrapper\">\n        <div style=\"display: flex;\">\n            <label for=\"checked\" style=\"font-size: 15px;padding-bottom: 10px;\"> AutoFit in Pdf Export </label>\n            <div style=\"padding-left: 10px;\">\n            <input id=\"checked\" type=\"checkbox\">\n            </div>\n        </div>\n        <div id=\"GanttExport\">\n        </div>\n    </div>\n</div>\n\n\n\n</div></body></html>","index.js":"{{ripple}}\n    var isFitToWidth;\n    var ganttChart = new ej.gantt.Gantt({\n        dataSource: window.editingData,\n        dateFormat: 'MMM dd, y',\n        taskFields: {\n            id: 'TaskID',\n            name: 'TaskName',\n            startDate: 'StartDate',\n            endDate: 'EndDate',\n            duration: 'Duration',\n            progress: 'Progress',\n            dependency: 'Predecessor',\n            child: 'subtasks',\n            resourceInfo: 'resources'\n        },\n        columns: [\n            { field: 'TaskID', width: 80 },\n            { field: 'TaskName', width: 250 },\n        ],\n        allowExcelExport: true,\n        allowPdfExport: true,\n        toolbar: ['ExcelExport', 'CsvExport', 'PdfExport'],\n        toolbarClick: function (args) {\n            if (args.item.id === 'GanttExport_excelexport') {\n                ganttChart.excelExport();\n            }\n            else if (args.item.id === 'GanttExport_csvexport') {\n                ganttChart.csvExport();\n            } else if (args.item.id === 'GanttExport_pdfexport') {\n                var exportProperties = {\n                    fitToWidthSettings: {       \n                        isFitToWidth: isFitToWidth,       \n                    }       \n                };\n                ganttChart.pdfExport(exportProperties);\n            }\n        },\n        allowSelection: true,\n        gridLines: 'Both',\n        height: '450px',\n        treeColumnIndex: 1,\n        resourceFields: {\n            id: 'resourceId',\n            name: 'resourceName'\n        },\n        resources: editingResources,\n        highlightWeekends: true,\n        timelineSettings: {\n            topTier: {\n                unit: 'Week',\n                format: 'MMM dd, y',\n            },\n            bottomTier: {\n                unit: 'Day',\n            },\n        },\n        labelSettings: {\n            leftLabel: 'TaskName'\n        },\n        splitterSettings: {\n            columnIndex: 2,\n        },\n        projectStartDate: new Date('03/25/2019'),\n        projectEndDate: new Date('07/28/2019'),\n    });\n    \n    ganttChart.appendTo('#GanttExport');\n\n    var taskbarDragDrop = new ej.buttons.Switch({ value: 'fitToWidth', change: dragDropChange});\n    taskbarDragDrop.appendTo('#checked');\n\n    function dragDropChange(args) {\n        if (args.checked) {\n            isFitToWidth = true;\n        } else {\n            isFitToWidth = false;\n        }\n    }\n\n"}